document.addEventListener('DOMContentLoaded', () => {
    const orderSummary = document.getElementById('order-summary');
    const orderDetails = document.getElementById('order-details');
    const totalCostBlock = document.getElementById('total-price-block');
    const totalCostValue = document.getElementById('total-price');
    const orderForm = document.getElementById('orderForm');
    console.log(orderForm)
    const resetButtonContainerAFK = document.querySelector('reset_button .reset');
    const resetButtonContainer = document.getElementById('reset_button');
    const resetButton = document.querySelector('#reset_button button[type="reset"]');


    console.log('666 b 222', resetButton)
    console.log('11',resetButtonContainerAFK)
    console.log('22', resetButtonContainer)
    const apiKey = '65f931a2-29e2-4ca0-b490-5a19bb332145'

    let dishes = [];
    let selectedDishes = {
        soup: null,
        mainCourse: null,
        salad: null,
        drink: null,
        dessert: null
    };

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –±–ª—é–¥ —Å API
    //–¥–µ–ª–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π
    // 
    async function loadDishes() {
       
        try {
            // await: –û–∂–∏–¥–∞–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∫–∞ –∑–∞–ø—Ä–æ—Å –Ω–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è, –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è.
            const response = await fetch(`https://edu.std-900.ist.mospolytech.ru/labs/api/dishes?api_key=${apiKey}`);
            if (!response.ok) {
                throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –±–ª—é–¥');
            }
            dishes = await response.json();
            loadSelectedDishesFromLocalStorage();
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞:', error);
            showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –±–ª—é–¥');
        }

        
        console.log('2', selectedDishes)
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –±–ª—é–¥ –∏–∑ localStorage
function loadSelectedDishesFromLocalStorage() {
    // –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –±–ª—é–¥ –∏–∑ localStorage –∏ –ø–∞—Ä—Å–∏–º –∏—Ö –∏–∑ JSON
    const savedDishIds = JSON.parse(localStorage.getItem('selectedDishes'));
    // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –±–ª—é–¥
    if (savedDishIds) {
        // –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –∫–∞–∂–¥—ã–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –±–ª—é–¥–∞
        savedDishIds.forEach(dishId => {
            // –ù–∞—Ö–æ–¥–∏–º –±–ª—é–¥–æ –ø–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É –≤ –º–∞—Å—Å–∏–≤–µ dishes
            const dish = dishes.find(d => d.id === dishId);
            // –ï—Å–ª–∏ –±–ª—é–¥–æ –Ω–∞–π–¥–µ–Ω–æ
            if (dish) {
                // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –±–ª—é–¥–∞
                const category = dish.category === 'main-course' ? 'mainCourse' : dish.category;
                // –î–æ–±–∞–≤–ª—è–µ–º –±–ª—é–¥–æ –≤ –æ–±—ä–µ–∫—Ç selectedDishes –ø–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                selectedDishes[category] = dish;
            }
        });
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–≤–æ–¥–∫—É –∑–∞–∫–∞–∑–∞
        updateOrderSummary();
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞
        updateOrderDetails();

        // –í—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å –æ–±—ä–µ–∫—Ç selectedDishes –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        console.log('1', selectedDishes);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–≤–æ–¥–∫–∏ –∑–∞–∫–∞–∑–∞
function updateOrderSummary() {
    // –û—á–∏—â–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±–ª–æ–∫–∞ —Å–≤–æ–¥–∫–∏ –∑–∞–∫–∞–∑–∞
    orderSummary.innerHTML = '';
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞
    let totalCost = 0;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –±–ª—é–¥–∞
    if (!Object.values(selectedDishes).some(dish => dish)) {
        // –ï—Å–ª–∏ –±–ª—é–¥–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω—ã, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å–∫—Ä—ã–≤–∞–µ–º –±–ª–æ–∫ –æ–±—â–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏
        orderSummary.innerHTML = '<p>–ù–∏—á–µ–≥–æ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ. –ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –±–ª—é–¥–∞ –≤ –∑–∞–∫–∞–∑, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É <a href="index_lab8.html">–°–æ–±—Ä–∞—Ç—å –ª–∞–Ω—á</a>.</p>';
        totalCostBlock.style.display = 'none';
        return;
    }

    // –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –±–ª—é–¥–∞
    Object.entries(selectedDishes).forEach(([category, dish]) => {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –±–ª—é–¥–∞
        const categoryName = {
            soup: '–°—É–ø',
            mainCourse: '–ì–ª–∞–≤–Ω–æ–µ –±–ª—é–¥–æ',
            salad: '–°–∞–ª–∞—Ç',
            drink: '–ù–∞–ø–∏—Ç–æ–∫',
            dessert: '–î–µ—Å–µ—Ä—Ç'
        }[category];

        // –ï—Å–ª–∏ –±–ª—é–¥–æ –≤—ã–±—Ä–∞–Ω–æ
        if (dish) {
            // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–ª—é–¥–∞
            const div = createDishElement(dish, true);
            // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –≤ –±–ª–æ–∫ —Å–≤–æ–¥–∫–∏ –∑–∞–∫–∞–∑–∞
            orderSummary.appendChild(div);
            // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –±–ª—é–¥–∞ –∫ –æ–±—â–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏
            totalCost += parseInt(dish.price);
        }
    });

    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–±—â–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏
    totalCostValue.textContent = `${totalCost}‚ÇΩ`;
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –±–ª–æ–∫ –æ–±—â–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏
    totalCostBlock.style.display = 'block';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞
function updateOrderDetails() {
    // –û—á–∏—â–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±–ª–æ–∫–∞ –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞
    orderDetails.innerHTML = '';

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –±–ª—é–¥–∞
    const hasSelectedDishes = Object.values(selectedDishes).some(dish => dish);

    // –ï—Å–ª–∏ –±–ª—é–¥–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω—ã, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    if (!hasSelectedDishes) {
        const div = document.createElement('div');
        div.classList.add('order-item');
        div.innerHTML = '<p>–ù–µ –≤—ã–±—Ä–∞–Ω–æ</p>';
        orderDetails.appendChild(div);
        return;
    }

    // –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –±–ª—é–¥–∞
    Object.entries(selectedDishes).forEach(([category, dish]) => {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –±–ª—é–¥–∞
        const categoryName = {
            soup: '–°—É–ø',
            mainCourse: '–ì–ª–∞–≤–Ω–æ–µ –±–ª—é–¥–æ',
            salad: '–°–∞–ª–∞—Ç',
            drink: '–ù–∞–ø–∏—Ç–æ–∫',
            dessert: '–î–µ—Å–µ—Ä—Ç'
        }[category];

        // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–ª—é–¥–∞
        const div = document.createElement('div');
        div.classList.add('order-item');
        div.innerHTML = `<h4>${categoryName}</h4><p>${dish ? `${dish.name} ${dish.price}‚ÇΩ` : '–ù–µ –≤—ã–±—Ä–∞–Ω–æ'}</p>`;
        // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –≤ –±–ª–æ–∫ –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞
        orderDetails.appendChild(div);
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –±–ª—é–¥–∞ –∏–∑ –∑–∞–∫–∞–∑–∞
function removeDishFromOrder(dishId) {
    // –ù–∞—Ö–æ–¥–∏–º –±–ª—é–¥–æ –ø–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É –≤ –º–∞—Å—Å–∏–≤–µ dishes
    const dish = dishes.find(dish => dish.id === Number(dishId));

    // –ï—Å–ª–∏ –±–ª—é–¥–æ –Ω–∞–π–¥–µ–Ω–æ
    if (dish) {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –±–ª—é–¥–∞
        const category = dish.category === 'main-course' ? 'mainCourse' : dish.category;
        // –£–¥–∞–ª—è–µ–º –±–ª—é–¥–æ –∏–∑ –æ–±—ä–µ–∫—Ç–∞ selectedDishes
        selectedDishes[category] = null;
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–≤–æ–¥–∫—É –∑–∞–∫–∞–∑–∞
        updateOrderSummary();
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞
        updateOrderDetails();
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –±–ª—é–¥–∞ –≤ localStorage
        saveSelectedDishesToLocalStorage();
    }
}


    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–°–±—Ä–æ—Å–∏—Ç—å"
    resetButton.addEventListener('click', (event) => {
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
        orderForm.reset();
        // –û—á–∏—â–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –±–ª—é–¥–∞
        selectedDishes = {
            soup: null,
            mainCourse: null,
            salad: null,
            drink: null,
            dessert: null
        };
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–≤–æ–¥–∫—É –∏ –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞
        updateOrderSummary();
        updateOrderDetails();
        // –û—á–∏—â–∞–µ–º localStorage
        localStorage.removeItem('selectedDishes');
    });

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –±–ª—é–¥ –≤ localStorage
    function saveSelectedDishesToLocalStorage() {
        const selectedDishIds = Object.values(selectedDishes).filter(dish => dish).map(dish => dish.id);
        localStorage.setItem('selectedDishes', JSON.stringify(selectedDishIds));
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–£–¥–∞–ª–∏—Ç—å"
    orderSummary.addEventListener('click', event => {
        if (event.target.classList.contains('btn')) {
            const dishId = event.target.getAttribute('data-dish');
            removeDishFromOrder(dishId);
        }
    });

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    function showNotification(message) {
        const notification = document.createElement('div');
        notification.className = 'notification';
        notification.innerHTML = `
            <p>${message}</p>
            <button>–û–∫–µ–π üëå</button>
        `;
        document.body.appendChild(notification);

        notification.querySelector('button').addEventListener('click', () => {
            closeNotification(notification);
        });
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    function closeNotification(notification) {
        notification.remove();
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è —Ñ–æ—Ä–º—ã
    orderForm.addEventListener('submit', async event => {
        console.log('777', selectedDishes)
        event.preventDefault();
        if (!validateOrder()) {
            console.log('3', dishes)
            console.log('3', selectedDishes)
            event.preventDefault();
        }

        const formData = new FormData(orderForm);
        formData.append('soup_id', selectedDishes.soup ? selectedDishes.soup.id : '');
        formData.append('main_course_id', selectedDishes.mainCourse ? selectedDishes.mainCourse.id : '');
        formData.append('salad_id', selectedDishes.salad ? selectedDishes.salad.id : '');
        formData.append('drink_id', selectedDishes.drink ? selectedDishes.drink.id : '');
        formData.append('dessert_id', selectedDishes.dessert ? selectedDishes.dessert.id : '');

        try {
            const response = await fetch(`https://edu.std-900.ist.mospolytech.ru/labs/api/orders?api_key=${apiKey}`, {
                method: 'POST',
                body: formData
            });
            if (!response.ok) {
                throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞');
            }
            const result = await response.json();
            showNotification('–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω!');
            localStorage.removeItem('selectedDishes');
            window.location.href = 'index_lab8.html';
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞:', error);
            showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞');
        }



    });

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –±–ª—é–¥
    function validateOrder() {
        console.log(dishes)
        console.log(selectedDishes)
        const selectedDishesArray = Object.values(selectedDishes).filter(dish => dish !== null);

        if (selectedDishesArray.length === 0) {
            showNotification('–ù–∏—á–µ–≥–æ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ. –í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–∞ –¥–ª—è –∑–∞–∫–∞–∑–∞');
            return false;
        }

        const hasSoup = selectedDishesArray.some(dish => dish.category === 'soup');
        const hasMainCourse = selectedDishesArray.some(dish => dish.category === 'main-course');
        const hasSalad = selectedDishesArray.some(dish => dish.category === 'salad');
        const hasDrink = selectedDishesArray.some(dish => dish.category === 'drink');

        if (!hasDrink) {
            showNotification('–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø–∏—Ç–æ–∫');
            return false;
        }

        if (hasSoup && !hasMainCourse && !hasSalad) {
            showNotification('–í—ã–±–µ—Ä–∏—Ç–µ –≥–ª–∞–≤–Ω–æ–µ –±–ª—é–¥–æ/—Å–∞–ª–∞—Ç/—Å—Ç–∞—Ä—Ç–µ—Ä');
            return false;
        }

        if ((hasSalad || hasMainCourse) && !hasSoup && !hasMainCourse) {
            showNotification('–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–ø –∏–ª–∏ –≥–ª–∞–≤–Ω–æ–µ –±–ª—é–¥–æ');
            return false;
        }

        if (hasDrink && !hasMainCourse) {
            showNotification('–í—ã–±–µ—Ä–∏—Ç–µ –≥–ª–∞–≤–Ω–æ–µ –±–ª—é–¥–æ');
            return false;
        }

        return true;
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –±–ª—é–¥–∞
    function createDishElement(dish, isOrderPage = false) {
        const gridItem = document.createElement('div');
        gridItem.classList.add('dish');
        gridItem.setAttribute('data-dish', dish.id);
        gridItem.setAttribute('data-kind', dish.category);

        const productImage = document.createElement('div');
        productImage.classList.add('product-image');
        const img = document.createElement('img');
        img.src = dish.image;
        img.alt = dish.name;
        productImage.appendChild(img);

        const productDetails = document.createElement('div');
        productDetails.classList.add('product-details');
        const price = document.createElement('p');
        price.classList.add('into');
        price.textContent = `${dish.price} ‚ÇΩ`;
        const name = document.createElement('p');
        name.classList.add('name_product');
        name.textContent = dish.name;
        const weight = document.createElement('p');
        weight.classList.add('weight');
        weight.textContent = dish.weight;
        const button = document.createElement('button');
        button.classList.add('btn');
        button.textContent = isOrderPage ? '–£–¥–∞–ª–∏—Ç—å' : '–î–æ–±–∞–≤–∏—Ç—å';
        button.setAttribute('data-dish', dish.id);

        productDetails.appendChild(price);
        productDetails.appendChild(name);
        productDetails.appendChild(weight);
        productDetails.appendChild(button);

        gridItem.appendChild(productImage);
        gridItem.appendChild(productDetails);

        return gridItem;
    }

    loadDishes();
});
